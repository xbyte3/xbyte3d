
#include "xbyte_3d_engine/helper"

function vector2 get_forward( Yaw ) {
    return vec2( cos( Yaw ), sin( Yaw ) )
}

function vector angle:get_eye() {
    local VX = cos( This:yaw() )
    local VY = sin( This:yaw() )
    local VZ = tan( -This:pitch() )
    return vec( VX, VY, VZ ):normalized()
}

function vector2 table:toScreen( Vec:vector ) {
    local CameraPos = This:pos()
    local CameraAngles = This:angles()
    local FOV = This:fov()
    local ScrSize = This:res()
    
    local Dir = -( Vec - CameraPos ):normalized()
    local Local = toLocal( Vec, ang(), CameraPos, CameraAngles )
    local Projected = vec2( Local:y(), Local:z() ) / Local:x() * cot( FOV / 2 )
    
    local Translated = ScrSize / 2 - Projected * ScrSize:y() / 1.5
    local FDP = CameraAngles:get_eye():dot( Dir )
    
    if( FDP > 0 ) {
        return Translated
    }else{
        return ScrSize
    }
}

function number number:normalize() {
    return ( ( ( ( This % 360 ) + 540 ) % 360 ) - 180)
}

function angle angle:normalized() {
    return ang( This:pitch():normalize(), This:yaw():normalize(), This:roll():normalize() )
}
