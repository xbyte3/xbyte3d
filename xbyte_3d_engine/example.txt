@name xbyte_3d_engine testExample
@inputs Memory

if( first() ) {
    #include "xbyte_3d_engine/main"
    
    S = entity():isWeldedTo():wirelink() # - egp screen
    S:cl() # - cleaning egp screen
    
    # - Initizalizing table of objects
    
    Objects = table()
    Objects:obj_tbl_set( 2, obj_init( table(
        "desc" = "Pyramid",
        "Vertices" = array(
            vec( -0.25, -0.25, -0.25 ) ,
            vec( -0.25, 0.25, -0.25 ),
            vec( 0.25, 0.25, -0.25 ),
            vec( 0.25, -0.25, -0.25 ),
            
            vec( -0.15, -0.15, 0.15 ),
            vec( -0.15, 0.15, 0.15 ),
            vec( 0.15, 0.15, 0.15 ),
            vec( 0.15, -0.15, 0.15 )
        ),
        "Triangles" = array(
            vec( 1, 2, 3 ),
            vec( 3, 4, 1 ),
            
            vec( 8, 7, 6 ),
            vec( 6, 5, 8 ),
            
            vec( 7, 8, 4 ),
            vec( 4, 3, 7 ),
            
            vec( 5, 6, 2 ),
            vec( 2, 1, 5 ),
            
            vec( 6, 7, 3 ),
            vec( 3, 2, 6 ),
            
            vec( 1, 4, 8 ),
            vec( 8, 5, 1 )
        ),
        "Pos" = vec( 0, 2, 0 ),
        "Scale" = vec( 0.5 )
    ) ) )
    Objects:obj_tbl_set( 1, obj_init( table(
        "desc" = "Cube",
        "Vertices" = array(
            vec( -0.25, -0.25, -0.25 ),
            vec( -0.25, 0.25, -0.25 ),
            vec( 0.25, 0.25, -0.25 ),
            vec( 0.25, -0.25, -0.25 ),
            
            vec( -0.25, -0.25, 0.25 ),
            vec( -0.25, 0.25, 0.25 ),
            vec( 0.25, 0.25, 0.25 ),
            vec( 0.25, -0.25, 0.25 )
        ),
        "Triangles" = array(
            vec( 1, 2, 3 ),
            vec( 3, 4, 1 ),
            
            vec( 8, 7, 6 ),
            vec( 6, 5, 8 ),
            
            vec( 7, 8, 4 ),
            vec( 4, 3, 7 ),
            
            vec( 5, 6, 2 ),
            vec( 2, 1, 5 ),
            
            vec( 6, 7, 3 ),
            vec( 3, 2, 6 ),
            
            vec( 1, 4, 8 ),
            vec( 8, 5, 1 )
        ),
        "Scale" = vec( 1 )
    ) ) )
    
    foreach( I:number, Obj:table = Objects ) { for( O = 1, Obj:obj_tri():count() ) { Obj:obj_uv( O, "vgui/resource/icon_steam" ) } } # - setting up objects triangles material
    
    initialize( table( 
        S, # - egp screen
        vec( 0, 16, 0 ), # - camera position
        ang( 0, 90, 0 ), # - camera angles
        90, # - camera fov
        0.03, # - znear
        1000, # - zfar
        vec2( 512 ), # - camera resolution
        Objects, # - objects table
        1 # - Debug mode( Shows your pos, angles, triangles, visible triangles )
        ) 
    ) # - Render and Scene initialize
    
    render_think( 100 ) # - set interval
    
    timer( "Think", render_think() )
}

if ( clk( "Think" ) ) {
    timer( "Think", render_think() )
    
    Render:graphics_update()
    Render:camera():controls( Memory )
    
    Objects[ 1, table ]:obj_ang( ang( curtime() * 55 ) )
    Objects[ 2, table ]:obj_pos( vec( sin( curtime() * 55 ), 0, cos( curtime() * 55 ) ) )
    Objects[ 2, table ]:obj_ang( ang( 0, curtime() * 99, 0 ) )
}
